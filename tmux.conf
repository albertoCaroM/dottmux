#improve colors
set -g default-terminal 'screen-256color'


# renumber windows when a window is closed
set -g renumber-windows on


# Status Bar
set-option -g status-interval 1
set-option -g status-left 'Tmux:#S'
set-option -g status-right '%l:%M%p'
set-window-option -g window-status-current-fg magenta
set-option -g status-fg default
set-option -g status-bg black

# increase scrollback lines
set -g history-limit 10000

# Notifications
setw -g monitor-activity on
set -g visual-activity on

# bind for reload configuration
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Getting interesting now, we use the vertical and horizontal
# symbols to split the screen
bind | split-window -h
bind - split-window -v

# bind for clear history 
unbind h 
bind h  clear-history  \; display "history cleared!"


# smart pane switching with awareness of vim splits
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"











#tmux-powerline  https://github.com/erikw/tmux-powerline  
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"

#
#
bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard > /dev/null'

